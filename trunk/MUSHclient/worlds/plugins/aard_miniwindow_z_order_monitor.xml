<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Miniwindow_Z_Order_Monitor"
   author="Fiendish"
   id="462b665ecb569efbf261422f"
   language="Lua"
   purpose="Monitors the z-order of plugin miniwindows to maintain uniqueness."
   date_written="2011-04-23 11:51:55"
   requires="4.72"
   version="1.0"
   >

</plugin>
<!--  Script  -->

<script>
<![CDATA[

usedNumbers = {}


function OnPluginInstall()
   BroadcastPlugin(996,"re-register z")
end

-- To use this:
-- rc, my_layer_number, my_layer_string = CallPlugin("462b665ecb569efbf261422f", "registerMiniwindow", GetPluginID(), tonumber(GetVariable("my_layer_number")))
-- my_layer_number is either nil or an integer between 1 and 99
-- return value is layer_number (this is what you should save in state)
function registerMiniwindow(callerID, requestedZNumber)
    if requestedZNumber ~= nil and (usedNumbers[requestedZNumber] == callerID or usedNumbers[requestedZNumber] == nil) then
       -- if we request a particular spot and nothing else is already using it go ahead and assign that one
       usedNumbers[requestedZNumber] = callerID
       return requestedZNumber
    else
       -- find another spot for it
       for i = 1,99 do -- allow for a large number of ordered miniwindows
          if usedNumbers[i] == nil then
             usedNumbers[i] = callerID
             return i
          end
       end
    end
    return 100,"" -- seriously? we didn't find a single free spot in 99? *snerk*
end

function maxLayer()
    local max = 0
    for i,v in ipairs(usedNumbers) do
        if i > max then
            max = i
        end
    end
    return max
end

function layerString(layer_number)
    return string.rep("z",layer_number)..string.rep("a",99-layer_number)
end

function cycleOutWindow(oldID)
    WindowShow(oldID, false)
    DoAfterSpecial (0.1, 'WindowDelete ("'..oldID..'")', sendto.script)
end

]]>

</script>
</muclient>
