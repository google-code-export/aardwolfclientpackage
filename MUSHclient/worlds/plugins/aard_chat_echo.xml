<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>

<muclient>
<plugin
   name="Aardwolf_Chat_Echo"
   author="Fiendish"
   id="55616ea13339bc68e963e1f8"
   language="Lua"
   purpose="Control whether certain channels get hidden from main output"
   date_written="2011-07-27 01:00:00"
   requires="4.75"
   version="1.0"
   save_state="y"
>

<description trim="y">
USAGE:

   chats echo on      : show all chats in main window
   chats echo off     : do not show any chats in main window
   chats echo custom  : select a custom list of chats to show in the main window
</description>

</plugin>

<triggers>
<trigger
   enabled="y"
   match="^{say}(?<msg>.*)"
   regexp="y"
   script="chats"
   omit_from_output="y"
   sequence="100"
></trigger>
   
<trigger
   enabled="y"
   match="^{chan ch=(?<channel>\w+)}(?<msg>.*)"
   regexp="y"
   script="chats"
   omit_from_output="y"
   sequence="100"
></trigger>
    
<trigger
   enabled="y"
   match="^{tell}(?<msg>.*)"
   script="chats"
   omit_from_output="y"
   regexp="y"
   sequence="100"
></trigger>

<trigger
   enabled="n"
   name="remort_auction"
   match="^Remort Auction:.+$"
   regexp="y"
   script="untagged_info"
   omit_from_output="y"
   sequence="100"
></trigger>

<trigger
   enabled="n"
   name="global_quest"
   match="^Global Quest:.+$"
   regexp="y"
   script="untagged_info"
   omit_from_output="y"
   sequence="100"
></trigger>

<trigger
   enabled="n"
   name="info"
   match="^INFO:.+$"
   regexp="y"
   script="untagged_info"
   omit_from_output="y"
   sequence="100"
></trigger>    
   
<trigger
   enabled="n"
   name="raidinfo"
   match="^RAIDINFO:.+$"
   regexp="y"
   script="untagged_info"
   omit_from_output="y"
   sequence="100"
></trigger>   

<trigger
   enabled="n"
   name="claninfo"
   match="^CLANINFO:.+$"
   regexp="y"
   script="untagged_info"
   omit_from_output="y"
   sequence="100"
></trigger>

<trigger
   enabled="n"
   match="^$"
   regexp="y"
   name="end_gag_omit"
   group="end_gag"
   omit_from_output="y"
   sequence="100"
   send_to="12"
>
<send>
   EnableTriggerGroup("end_gag", false)
</send>
</trigger>
    
<trigger
   enabled="n"
   match=".*"
   regexp="y"
   name="end_gag_keep"
   group="end_gag"
   omit_from_output="n"
   sequence="101"
   send_to="12"
>
<send>
   EnableTriggerGroup("end_gag", false)
</send>
</trigger>

</triggers>

<aliases>
<alias
   script="chat_echo"
   match="^chats? echo( on| off | custom)?$"
   enabled="y"
   regexp="y"
   sequence="100"
   ignore_case="y"
></alias>
</aliases>

<!--  Script  -->

<script>
<![CDATA[

channel_names = {"advice","answer","auction","barter","clantalk","curse","debate","ftalk","gametalk","gclan","gossip","gratz","gsocial","gtell","helper","immtalk","lasertag","market","music","mxit","newbie","nobletalk","pokerinfo","question","quote","racetalk","rauction","rp","say","sports","spouse","tech","tell","tiertalk","wangrp","wardrums"}
channels_table = {}
loadstring(GetVariable("channels_table") or "")()

function addNewChannel(name)
   channels_table[name] = channels_table[name] or {echo=true}
end

function constructDefaultChannels()
   for i,v in ipairs(channel_names) do
      addNewChannel(v)
   end
end

constructDefaultChannels()

function echoStyles(styles)
   for _, v in ipairs(styles) do
      ColourTell(RGBColourToName(v.textcolour), RGBColourToName(v.backcolour), v.text)
   end -- for each style run
   Note ("")  -- wrap up line
end

function chats (name, line, wildcards, styles)
   local tag = string.match(styles[1].text, "chan ch=(%a+)")
   if not tag then
      tag = string.match(styles[1].text, "{(say)}")
   end
   if not tag then
      tag = string.match(styles[1].text, "{(tell)}")
   end
   
   -- echo in this world only if the user wants
   if (echo == 0) then
      EnableTriggerGroup("end_gag", true) -- gags the trailing blank line if compact is off
   elseif channels_table[tag] and channels_table[tag]["echo"] then
      -- strip out the tag
      tag_length = string.find(styles[1].text,"}")
      styles[1].text = string.sub(styles[1].text, tag_length+1)
      styles[1].length = styles[1].length-tag_length
      
      -- display
      echoStyles(styles)
   end -- echo wanted
end -- chats

function untagged_info (name, line, wildcards, styles)
   -- echo in this world only if the user wants
   if (echo == 0) then
      EnableTriggerGroup("end_gag", true) -- gags the trailing blank line if compact is off
   else
      echoStyles(styles)
   end -- echo wanted
   
end -- untagged info

function chat_echo (name, line, wildcards)
   if wildcards[1] == "" then
      ColourNote("yellow", "", "Current channel echo status: ")
      for i,v in ipairs(channel_names) do
         ColourTell("yellow", "", tostring(v).." ")
         ColourNote((channels_table[v]["echo"] and "lime") or "red", "", tostring(channels_table[v]["echo"] or "false"))
      end
   elseif wildcards[1]:lower() == " on" then
      for k,v in pairs(channels_table) do
         channels_table[k]["echo"] = true
      end
      ColourNote ("yellow", "", "All chats are now SHOWN in the main window.")
   elseif wildcards[1]:lower() == " off" then
      for k,v in pairs(channels_table) do
         channels_table[k]["echo"] = nil
      end
      ColourNote ("yellow", "", "All chats are now HIDDEN in the main window.")
   elseif wildcards[1]:lower() == " custom" then
      tbl = {}
      defaults = {}
      for i,v in ipairs(channel_names) do
         tbl[i] = v
         defaults[i] = channels_table[v]["echo"]
      end
      local echo_result = utils.multilistbox ("Choose which channels to show in the main window.", "Main Output Echo Channel Selection", tbl, defaults)
      if echo_result then
         for i,v in ipairs(channel_names) do
            channels_table[v]["echo"] = echo_result[i]
         end
      end
   end -- if
   
   OnPluginSaveState()
end -- chat_echo

require "serialize"
function OnPluginSaveState()
   SetVariable("channels_table", serialize.save("channels_table"))
end

]]>
</script>
</muclient>
