<?xml version="1.0" encoding="iso-8859-1"?>
<!DOCTYPE muclient>
<muclient>
<plugin
   name="Aardwolf_Prompt_Fixer"
   author="Fiendish"
   id="1b55534e1fa021cf093aaa6d"
   language="Lua"
   purpose="Fixes prompt at startup so triggers work consistently"
   date_written="2011-12-07"
   requires="4.73"
   version="1.0"
   save_state="y"
>
<description trim="y">
If your prompt does not end in %c then anchored triggers will not fire consistently,
as some lines will get stuck on the end of your prompt. That is bad. This plugin
adds %c to the end of your prompts if you don't already have one so that all 
triggers work correctly. The idea for this plugin is based on other plugins by 
Bast and WinkleWinkle.
</description>
</plugin>

<triggers>
<trigger
   enabled="n"
   regexp="y"
   omit_from_output="y"
   match="^Rawcolor Game Prompt   : (.*)$"
   sequence="100"
   name="prompt"
   send_to="12"
   script="prompt_rec"
   group="prompts"
>
</trigger>
  
<trigger
   enabled="n"
   regexp="y"
   omit_from_output="y"
   match="^Rawcolor Battle Prompt : (.*)$"
   sequence="100"
   send_to="12"
   name="bprompt"
   script="prompt_rec"
   group="prompts"
>
</trigger>
  
<trigger
   enabled="n"
   regexp="y"
   omit_from_output="y"
   match="^Regular Game Prompt    : .*$"
   sequence="100"
   group="prompts"
>
</trigger>

<trigger
   enabled="n"
   regexp="y"
   omit_from_output="y"
   match="^Regular Battle Prompt  : .*$"
   sequence="100"
   group="prompts"
>
</trigger>

<trigger
   enabled="n"
   omit_from_output="y"
   match="Battle prompt set to*"
   sequence="100"
   send_to="12"
   group="prompt_set_gags"
   script="finish"
>
</trigger>

<trigger
   enabled="n"
   regexp="y"
   omit_from_output="y"
   match="^.*$"
   sequence="200"
   group="prompt_set_gags"
>
</trigger>
</triggers>

<script>
<![CDATA[

stats = nil
docheck = true

-- functions for handling Aardwolf color codes
dofile(GetPluginInfo(GetPluginID(), 20) .. "aardwolf_colors.lua")

function finish (name, line, wildcards)
   EnableTriggerGroup("prompt_set_gags", false)
end

adjusted = {}
-- received a prompt line in the config output
function prompt_rec (name, line, wildcards, styles)
   -- remove trailing '@w's and dangling white space
   re = rex.new("^(.*?)(@w)*$")
   st, en, substrings = re:match(Trim(wildcards[1]))
   prompt = Trim(substrings[1])

   if prompt:sub(-2) ~= "%c" then
      table.insert(adjusted, name)
      prompt = prompt .. "%c"
   end
   SendNoEcho(name.." ".. prompt)
   if name == "bprompt" then
      EnableTriggerGroup("prompts", false)
      EnableTriggerGroup("prompt_set_gags", true)
      docheck = false
      if #adjusted ~= 0 then
         print("\nThe Aardwolf MUSHclient Package has adjusted your "..string.gsub(table.concat(adjusted," and "),"bprompt","battleprompt").." to end in '%c'.\nThis is necessary for triggers to work consistently.")
      end
      adjusted = {}
   end
end

function OnPluginBroadcast (msg, id, name, text)
   if docheck and id == "3e7dedbe37e44942dd46d264" and text == "char.status" then
      res, gmcparg = CallPlugin("3e7dedbe37e44942dd46d264","gmcpval", "char")
      stats = assert (loadstring ("return " .. gmcparg or ""))()

      if stats and stats.status and stats.status.state and
      (tonumber(stats.status.state) == 3 or
      tonumber(stats.status.state) == 9 or
      tonumber(stats.status.state) == 11) then
         EnableTriggerGroup("prompts", true)
         SendNoEcho("p data")
      end
   end
end

function OnPluginInstall ()
   OnPluginEnable()
end -- OnPluginInstall


function OnPluginEnable ()
   if IsConnected() then
      Execute("sendgmcp request char")
   end
end -- OnPluginEnable

]]>
</script>
</muclient>
